// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:redadj95@localhost:5432/reviewly"
}

model Session {
  id          String    @id
  shop        String
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      BigInt?
}

model Shop {
  id            String             @id @default(cuid())
  name          String             @unique
  shopifyDomain String             @unique
  products      Product[]
  settings      Settings?
  subscriptions ShopSubscription[]
  reviews       Review[]
}

model Review {
  id        Int      @id @default(autoincrement())
  productId String
  product   Product  @relation(fields: [productId], references: [productId])
  shopId    String
  shop      Shop     @relation(fields: [shopId], references: [id])
  comment   String
  replies   Reply[] // New field for nested replies
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String?
  rating    Float
  sentiment String?
  imageUrl  String?
  videoUrl  String?
  approved  Boolean  @default(false)
}

model Reply {
  id        Int       @id @default(autoincrement())
  reviewId  Int
  review    Review    @relation(fields: [reviewId], references: [id])
  content   String
  type      ReplyType
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  parentId  Int? // For nested replies
  parent    Reply?    @relation("NestedReplies", fields: [parentId], references: [id])
  children  Reply[]   @relation("NestedReplies")
}

enum ReplyType {
  AI
  ADMIN
  CUSTOMER
}

model Product {
  id        Int      @id @default(autoincrement())
  shopId    String
  shop      Shop     @relation(fields: [shopId], references: [id])
  productId String   @unique // Ensure productId is unique
  title     String
  reviews   Review[]
}

model Settings {
  id                       Int     @id @default(autoincrement())
  shopId                   String  @unique
  shop                     Shop    @relation(fields: [shopId], references: [id])
  enableSentimentAnalysis  Boolean @default(false)
  enableAutomatedResponses Boolean @default(false)
  allowMedia               Boolean @default(true)
  reviewModeration         String  @default("none") // options: "none", "all", "negative"
  notificationEmail        String?
}

model ShopSubscription {
  id           Int      @id @default(autoincrement())
  shopId       String
  shop         Shop     @relation(fields: [shopId], references: [id])
  subscription String   @default("Free Plan")
  updatedAt    DateTime @updatedAt

  @@unique([shopId])
}
